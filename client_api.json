{
  "openapi": "3.0.2",
  "info": {
    "title": "CY2 Connect",
    "version": "1.0.0",
    "description": "Client API to the CY2 Connect",
    "contact": {
      "url": "https://cy2.nl"
    }
  },
  "servers": [
    {
      "url": "https://dev.cy2hub.app/v1",
      "description": "development environment"
    },
    {
      "url": "https://test.cy2hub.app/v1",
      "description": "test environment"
    },
    {
      "url": "https://api.cy2hub.app/v1",
      "description": "production environment"
    }
  ],
  "paths": {
    "/messages": {
      "summary": "Path used to manage the list of messages.",
      "description": "The REST endpoint/path used to list and create zero or more `message` entities.  This path contains a `GET` and `POST` operation to perform the list and create tasks, respectively.",
      "post": {
        "requestBody": {
          "description": "A new `message` to be created.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/message"
              }
            }
          },
          "required": true
        },
        "tags": [
          "default"
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messageResponse"
                },
                "examples": {
                  "message created": {
                    "value": {
                      "users": [
                        "0012345",
                        "0012345"
                      ],
                      "type": 101,
                      "id": "03e2eebe-2712-4eba-8213-bed5876c0cb1",
                      "status": "C"
                    }
                  }
                }
              }
            },
            "description": "Successful response."
          },
          "400": {
            "$ref": "#/components/responses/error"
          }
        },
        "operationId": "create-message",
        "summary": "Create a message",
        "description": "Creates a new instance of a `message`."
      }
    },
    "/messages/{messageId}": {
      "summary": "Path used to manage a single message.",
      "description": "The REST endpoint/path used to get, update, and delete single instances of an `message`.  This path contains `GET`, `PUT`, and `DELETE` operations used to perform the get, update, and delete tasks, respectively.",
      "get": {
        "tags": [
          "default"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messageResponse"
                },
                "examples": {
                  "success": {
                    "value": {
                      "users": [
                        "0012345",
                        "0012346"
                      ],
                      "type": 101,
                      "id": "03e2eebe-2712-4eba-8213-bed5876c0cb1",
                      "status": "S"
                    }
                  },
                  "error": {
                    "value": {
                      "users": [
                        "0012345",
                        "0012346"
                      ],
                      "type": 101,
                      "id": "03e2eebe-2712-4eba-8213-bed5876c0cb1",
                      "status": "E",
                      "error": "too many messages sent"
                    }
                  },
                  "application error": {
                    "value": {
                      "users": [
                        "0012345",
                        "0012346"
                      ],
                      "type": 101,
                      "id": "03e2eebe-2712-4eba-8213-bed5876c0cb1",
                      "status": "U",
                      "applicationErrors": [
                        {
                          "oprid": "0012345",
                          "application": "MS-Teams",
                          "messageId": "03e2eebe-2712-4eba-8213-bed5876c0cb1",
                          "applicationMessageId": "69a098a6-497a-4eb9-b74c-b97d3a2a6ace",
                          "error": "something went wrong sending to MS Teams"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "description": "Successful response - returns a single `message`."
          },
          "404": {
            "description": "The `message` was not found."
          }
        },
        "operationId": "get-message",
        "summary": "Get a message",
        "description": "Gets the details of a single instance of a `message`."
      },
      "parameters": [
        {
          "name": "messageId",
          "description": "A unique identifier for a `message`.",
          "schema": {
            "type": "string"
          },
          "in": "path",
          "required": true
        }
      ]
    },
    "/oprids": {
      "summary": "Path used to manage the list of oprids.",
      "description": "The REST endpoint/path used to list and create zero or more `oprid` entities.  This path contains a `GET` and `POST` operation to perform the list and create tasks, respectively.",
      "get": {
        "tags": [
          "default"
        ],
        "parameters": [
          {
            "name": "active",
            "description": "Retrive either active or inactive OPRIDs",
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/oprid"
                  }
                }
              }
            },
            "description": "Successful response - returns an array of `oprid` entities."
          }
        },
        "operationId": "get-oprids",
        "summary": "List All OPRIDs",
        "description": "Gets a list of all `oprid` entities."
      }
    },
    "/oprids/{oprid}": {
      "summary": "Path used to manage a single oprid.",
      "description": "The REST endpoint/path used to get, update, and delete single instances of an `oprid`.  This path contains `GET`, `PUT`, and `DELETE` operations used to perform the get, update, and delete tasks, respectively.",
      "get": {
        "tags": [
          "default"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/opridResponse"
                }
              }
            },
            "description": "Successful response - returns a single `oprid`."
          },
          "404": {
            "description": " `oprid` was not found."
          }
        },
        "operationId": "get-oprid",
        "summary": "Get an OPRID",
        "description": "Gets the details of a single instance of an `oprid`."
      },
      "put": {
        "requestBody": {
          "description": "Updated `oprid` information.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/opridResponse"
              }
            }
          },
          "required": true
        },
        "tags": [
          "default"
        ],
        "responses": {
          "202": {
            "description": "Successful response."
          },
          "400": {
            "$ref": "#/components/responses/error"
          }
        },
        "operationId": "update-oprid",
        "summary": "Create or update an OPRID",
        "description": "Updates an existing `oprid`."
      },
      "delete": {
        "tags": [
          "default"
        ],
        "responses": {
          "204": {
            "description": "Successful response."
          }
        },
        "operationId": "delete-oprid",
        "summary": "Delete a OPRID",
        "description": "Deletes an existing `oprid`."
      },
      "parameters": [
        {
          "name": "oprid",
          "description": "A PeopleSOft OPRID.",
          "schema": {
            "type": "string"
          },
          "in": "path",
          "required": true
        }
      ]
    },
    "/oprids/{oprid}/mappings/": {
      "summary": "Path to manage `oprid' application mappings",
      "get": {
        "tags": [
          "default"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/mapping"
                  }
                }
              }
            },
            "description": "All mappings for the `oprid` have been retrieved."
          }
        },
        "operationId": "get-oprid-mappigs",
        "summary": "Get all application mappings for an OPRID"
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/mapping"
              }
            }
          },
          "required": true
        },
        "tags": [
          "default"
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/mapping"
                }
              }
            },
            "description": "The mapping has been created."
          },
          "400": {
            "$ref": "#/components/responses/error"
          }
        },
        "operationId": "post-oprid-mapping",
        "summary": "Create a mapping for the given application."
      },
      "parameters": [
        {
          "name": "oprid",
          "schema": {
            "type": "string"
          },
          "in": "path",
          "required": true
        }
      ]
    },
    "/oprids/{oprid}/mappings/{id}": {
      "summary": "Path used to manage a single `oprid` application mapping.",
      "get": {
        "tags": [
          "default"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/mapping"
                }
              }
            },
            "description": "The requested `oprid` application mapping."
          },
          "404": {
            "description": "The requested mapping does not exist."
          }
        },
        "operationId": "get-oprid-mapping",
        "summary": "Get an OPRID application mapping."
      },
      "put": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/mapping"
              }
            }
          },
          "required": true
        },
        "tags": [
          "default"
        ],
        "responses": {
          "200": {
            "description": "The mapping has been updated."
          },
          "400": {
            "$ref": "#/components/responses/error"
          },
          "404": {
            "description": "The requested mapping does not exist."
          }
        },
        "operationId": "update-oprid-mapping",
        "summary": "Update the OPRID application mapping."
      },
      "delete": {
        "tags": [
          "default"
        ],
        "responses": {
          "200": {
            "description": "The mapping has been deleted."
          },
          "404": {
            "description": "The requested mapping does not exist."
          }
        },
        "operationId": "delete-oprid-mapping",
        "summary": "Delete the OPRID application mapping."
      },
      "parameters": [
        {
          "name": "oprid",
          "schema": {
            "type": "string"
          },
          "in": "path",
          "required": true
        },
        {
          "name": "id",
          "schema": {
            "type": "string"
          },
          "in": "path",
          "required": true
        }
      ]
    }
  },
  "components": {
    "schemas": {
      "message": {
        "title": "Root Type for message",
        "description": "A message sent from PeopleSoft to the CY2 Hub that is then forwarded to requested PeopleSoft users.{",
        "required": [
          "type",
          "message",
          "users"
        ],
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "format": "int32",
            "description": "The type of message sent:\n\n|Type|Description|\n| --- | ----------- |\n|101|Notification|\n|201|Alert|",
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        },
        "example": {
          "users": [
            "0012345",
            "0012346"
          ],
          "type": 101,
          "message": "some message"
        }
      },
      "requestError": {
        "title": "Root Type for error",
        "description": "Error response",
        "type": "object",
        "properties": {
          "error": {
            "description": "Error message",
            "type": "string"
          }
        },
        "example": {
          "error": "error message"
        }
      },
      "attribute": {
        "title": "Root Type for attribute",
        "description": "A key/value pair representing an application attribute.",
        "required": [
          "name",
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "description": "The attribute value",
            "type": "string"
          },
          "name": {
            "description": "The attribute name.",
            "type": "string"
          }
        },
        "example": {
          "name": "some attribute name",
          "value": "some attribute value"
        }
      },
      "mapping": {
        "title": "Root Type for mappings",
        "description": "Application accounts belong to the user",
        "required": [
          "application",
          "enabled",
          "clientId"
        ],
        "type": "object",
        "properties": {
          "application": {
            "description": "The application being mapped.",
            "type": "string"
          },
          "enabled": {
            "description": "Is the application enabled or not for this OPRID.",
            "type": "boolean"
          },
          "id": {
            "description": "The OPRID/Application mapping ID.",
            "type": "string"
          },
          "attributes": {
            "description": "Additional application attributes",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/attribute"
            }
          },
          "clientId": {
            "description": "The user's ID for the given application.",
            "type": "string"
          }
        },
        "example": {
          "id": "ee0613a4-ae44-4119-9886-52523012c93b",
          "application": "MSTeams",
          "clientId": "8f22edc2-3f2e-4324-a4cf-8f0d21e5a0b1",
          "enabled": true
        }
      },
      "opridResponse": {
        "description": "PeopleSoft Oprid",
        "type": "object",
        "allOf": [
          {
            "required": [
              "id",
              "active"
            ],
            "type": "object",
            "properties": {
              "id": {
                "description": "The PeopleSoft OPRID",
                "type": "string"
              },
              "mappings": {
                "description": "Application mappings",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/mapping"
                }
              },
              "active": {
                "description": "Is the OPRID active, that is, can it recieve messages",
                "type": "boolean"
              }
            }
          },
          {
            "$ref": "#/components/schemas/oprid"
          }
        ],
        "example": {
          "id": "0012345",
          "active": true,
          "mappings": [
            {
              "application": "MSTeams",
              "enabled": true,
              "id": "e52b0002-25d1-4c22-9c14-20657f40bf47",
              "attributes": []
            }
          ]
        }
      },
      "oprid": {
        "title": "Root Type for oprid",
        "description": "",
        "required": [
          "active",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "The PeopleSoft OPRID",
            "type": "string"
          },
          "active": {
            "description": "This the `oprid` active",
            "type": "boolean"
          }
        },
        "example": {
          "id": "0012345",
          "active": true
        }
      },
      "messageResponse": {
        "description": "",
        "required": [
          "id",
          "status"
        ],
        "properties": {
          "id": {
            "description": "Message ID",
            "type": "string"
          },
          "status": {
            "description": "The status of the message:\n\n| Code | Description |\n| --- | ----------- |\n| C | Created |\n| U | User application errors  |\n| E | Error creating message |\n| S | Success |\n\n",
            "type": "string"
          },
          "error": {
            "description": "Error creating or processing the message",
            "type": "string"
          },
          "applicationErrors": {
            "description": "Any errors that occured",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/applicationError"
            }
          }
        },
        "example": {
          "users": [
            "0012345",
            "0012346"
          ],
          "type": 101,
          "id": "03e2eebe-2712-4eba-8213-bed5876c0cb1",
          "status": "C"
        }
      },
      "applicationError": {
        "title": "Root Type for messageError",
        "description": "An error occured sending a message to a user",
        "required": [],
        "type": "object",
        "properties": {
          "oprid": {
            "description": "The PeopleSoft OPRID the message sent to.",
            "type": "string"
          },
          "messageId": {
            "description": "The ID of the message sent from PeopleSoft.",
            "type": "string"
          },
          "error": {
            "description": "An error message if an error occured processing the message from PeopleSoft.",
            "type": "string"
          },
          "application": {
            "description": "The ID of the message sent to the requested application.",
            "type": "string"
          },
          "applicationMessageId": {
            "description": "The ID of the message sent to the requested application.",
            "type": "string"
          }
        },
        "example": {
          "oprid": "0012345",
          "application": "MS-Teams",
          "messageId": "69a098a6-497a-4eb9-b74c-b97d3a2a6ace",
          "applicationMessageId": "03e2eebe-2712-4eba-8213-bed5876c0cb1",
          "error": "something went wrong"
        }
      }
    },
    "responses": {
      "error": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/requestError"
            },
            "examples": {
              "Error": {
                "value": {
                  "error": "something bad happened"
                }
              }
            }
          }
        },
        "description": "Any error response"
      }
    },
    "securitySchemes": {
      "API-Key": {
        "type": "apiKey",
        "description": "Client API Key",
        "name": "X-Api-Key",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "API-Key": []
    }
  ],
  "tags": [
    {
      "name": "default",
      "description": ""
    }
  ]
}